{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFeed",
          "type": "address"
        }
      ],
      "name": "addPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feedToDelete",
          "type": "address"
        }
      ],
      "name": "deletePriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feedToArrayLocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Francisco/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Francisco/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "C:/Users/Francisco/.brownie/packages/smartcontractkit/chainlink@1.4.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "contracts/TimeOracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/TimeOracle.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        321
      ],
      "Context": [
        343
      ],
      "Ownable": [
        275
      ],
      "TimeOracle": [
        170
      ]
    },
    "id": 171,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "C:/Users/Francisco/.brownie/packages/smartcontractkit/chainlink@1.4.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 171,
        "sourceUnit": 322,
        "src": "57:76:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Francisco/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 171,
        "sourceUnit": 276,
        "src": "134:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 275,
              "src": "211:7:3"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "211:7:3"
          }
        ],
        "canonicalName": "TimeOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 170,
        "linearizedBaseContracts": [
          170,
          275,
          343
        ],
        "name": "TimeOracle",
        "nameLocation": "197:10:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18a57f99",
            "id": 9,
            "mutability": "mutable",
            "name": "timeFeed",
            "nameLocation": "257:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "226:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
              "typeString": "contract AggregatorV3Interface[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "AggregatorV3Interface",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "226:21:3"
                },
                "referencedDeclaration": 321,
                "src": "226:21:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                  "typeString": "contract AggregatorV3Interface"
                }
              },
              "id": 8,
              "nodeType": "ArrayTypeName",
              "src": "226:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage_ptr",
                "typeString": "contract AggregatorV3Interface[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95a9abab",
            "id": 13,
            "mutability": "mutable",
            "name": "feedToArrayLocation",
            "nameLocation": "306:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "271:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "279:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "271:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "290:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "346:99:3",
              "statements": []
            },
            "id": 17,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:2:3"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:0:3"
            },
            "scope": 170,
            "src": "332:113:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "575:281:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 25,
                            "name": "feedToArrayLocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "593:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "id": 26,
                            "name": "_newFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "613:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "593:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "626:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "593:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726963656665656420616c726561647920696e20636f6e7472616374",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "629:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5694c3f46f0e9b1344c4eb9825b57e061f317c7ec9c52b193fcbb9bfa22811ad",
                          "typeString": "literal_string \"Pricefeed already in contract\""
                        },
                        "value": "Pricefeed already in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5694c3f46f0e9b1344c4eb9825b57e061f317c7ec9c52b193fcbb9bfa22811ad",
                          "typeString": "literal_string \"Pricefeed already in contract\""
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "585:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "585:76:3"
                },
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "newFeed",
                      "nameLocation": "719:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "697:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 34,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 321,
                          "src": "697:21:3"
                        },
                        "referencedDeclaration": 321,
                        "src": "697:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37,
                        "name": "_newFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "751:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "729:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$321_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "697:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43,
                        "name": "newFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "784:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      ],
                      "expression": {
                        "id": 40,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "770:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "770:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage_ptr_$_t_contract$_AggregatorV3Interface_$321_$returns$__$bound_to$_t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage_ptr_$",
                        "typeString": "function (contract AggregatorV3Interface[] storage pointer,contract AggregatorV3Interface)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "770:22:3"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "feedToArrayLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "802:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "_newFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "822:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "802:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 49,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "834:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "834:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "802:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "802:47:3"
                }
              ]
            },
            "functionSelector": "0bb6842d",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "566:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "566:9:3"
              }
            ],
            "name": "addPriceFeed",
            "nameLocation": "528:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_newFeed",
                  "nameLocation": "549:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "541:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:18:3"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:3"
            },
            "scope": 170,
            "src": "519:337:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "926:285:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 62,
                            "name": "feedToArrayLocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "944:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 64,
                          "indexExpression": {
                            "id": 63,
                            "name": "_feedToDelete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "964:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "944:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "982:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "944:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636566656564206e6f7420696e20636f6e7472616374",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "985:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d46ac8ad057e094c6726ddd87f692c0a3482a55f0b942a38e187a1f93bd02033",
                          "typeString": "literal_string \"Pricefeed not in contract\""
                        },
                        "value": "Pricefeed not in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d46ac8ad057e094c6726ddd87f692c0a3482a55f0b942a38e187a1f93bd02033",
                          "typeString": "literal_string \"Pricefeed not in contract\""
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "936:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "936:77:3"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1031:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "1023:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1023:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 72,
                        "name": "feedToArrayLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1039:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 74,
                      "indexExpression": {
                        "id": 73,
                        "name": "_feedToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1059:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1039:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1076:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1039:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1023:54:3"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78,
                        "name": "feedToArrayLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1087:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 80,
                      "indexExpression": {
                        "id": 79,
                        "name": "_feedToDelete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1107:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1087:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1124:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1087:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:38:3"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 84,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1135:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "id": 85,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1144:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1135:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 87,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1153:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 88,
                            "name": "timeFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1162:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                              "typeString": "contract AggregatorV3Interface[] storage ref"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1162:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1178:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1162:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1153:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1135:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:45:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 95,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1190:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "1190:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage_ptr_$",
                        "typeString": "function (contract AggregatorV3Interface[] storage pointer)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:14:3"
                }
              ]
            },
            "functionSelector": "564a2b3c",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "917:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "917:9:3"
              }
            ],
            "name": "deletePriceFeed",
            "nameLocation": "871:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_feedToDelete",
                  "nameLocation": "895:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "887:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "886:23:3"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:3"
            },
            "scope": 170,
            "src": "862:349:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1269:350:3",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "sumOfTimes",
                      "nameLocation": "1284:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1279:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1279:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1279:15:3"
                },
                {
                  "assignments": [
                    110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "1312:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1304:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1304:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1304:9:3"
                },
                {
                  "assignments": [
                    113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 113,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nameLocation": "1328:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "1323:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1323:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:14:3"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "1383:152:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 126,
                            "name": "timeStamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1397:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1409:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1397:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1397:13:3"
                      },
                      {
                        "expression": {
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              null,
                              null,
                              {
                                "id": 130,
                                "name": "timeStamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1432:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              null
                            ],
                            "id": 131,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1424:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$__$__$_t_uint256_$__$",
                              "typeString": "tuple(,,,uint256,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 132,
                                  "name": "timeFeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9,
                                  "src": "1446:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                                    "typeString": "contract AggregatorV3Interface[] storage ref"
                                  }
                                },
                                "id": 134,
                                "indexExpression": {
                                  "id": 133,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 110,
                                  "src": "1455:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1446:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$321",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "latestRoundData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 320,
                              "src": "1446:27:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                              }
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1446:29:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "src": "1424:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1424:51:3"
                      },
                      {
                        "expression": {
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 139,
                            "name": "sumOfTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "1489:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 140,
                              "name": "sumOfTimes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1502:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 141,
                              "name": "timeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1515:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1502:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1489:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:35:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 119,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "1358:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 120,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1362:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1362:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1358:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 146,
                  "initializationExpression": {
                    "expression": {
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 115,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "1351:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1355:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1351:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 118,
                    "nodeType": "ExpressionStatement",
                    "src": "1351:5:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1379:3:3",
                      "subExpression": {
                        "id": 123,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "1379:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 125,
                    "nodeType": "ExpressionStatement",
                    "src": "1379:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1347:188:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 147,
                            "name": "sumOfTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "1552:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 148,
                                  "name": "sumOfTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "1566:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "expression": {
                                    "id": 149,
                                    "name": "timeFeed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9,
                                    "src": "1579:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                                      "typeString": "contract AggregatorV3Interface[] storage ref"
                                    }
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1579:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1566:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 152,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1565:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1552:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 154,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1551:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 155,
                        "name": "timeFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1597:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                          "typeString": "contract AggregatorV3Interface[] storage ref"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1597:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1551:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "1544:68:3"
                }
              ]
            },
            "functionSelector": "5ee1e512",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTime",
            "nameLocation": "1226:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:3"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "1263:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:3"
            },
            "scope": 170,
            "src": "1217:402:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1672:40:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 165,
                      "name": "timeFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1689:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$321_$dyn_storage",
                        "typeString": "contract AggregatorV3Interface[] storage ref"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1689:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 167,
                  "nodeType": "Return",
                  "src": "1682:22:3"
                }
              ]
            },
            "functionSelector": "be1c766b",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLength",
            "nameLocation": "1634:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:2:3"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1667:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:6:3"
            },
            "scope": 170,
            "src": "1625:87:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 171,
        "src": "188:1526:3",
        "usedErrors": []
      }
    ],
    "src": "32:1682:3"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107fd8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101065780638da5cb5b1461010e57806395a9abab1461011f578063be1c766b1461013f578063f2fde38b1461014757600080fd5b80630bb6842d1461009857806318a57f99146100ad578063564a2b3c146100dd5780635ee1e512146100f0575b600080fd5b6100ab6100a6366004610610565b61015a565b005b6100c06100bb366004610640565b61024e565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100eb366004610610565b610278565b6100f86103f9565b6040519081526020016100d4565b6100ab6104ef565b6000546001600160a01b03166100c0565b6100f861012d366004610610565b60026020526000908152604090205481565b6001546100f8565b6100ab610155366004610610565b610525565b6000546001600160a01b0316331461018d5760405162461bcd60e51b815260040161018490610659565b60405180910390fd5b6001600160a01b038116600090815260026020526040902054156101f35760405162461bcd60e51b815260206004820152601d60248201527f50726963656665656420616c726561647920696e20636f6e74726163740000006044820152606401610184565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039093166001600160a01b0319909316831790555460009182526002602052604090912055565b6001818154811061025e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102a25760405162461bcd60e51b815260040161018490610659565b6001600160a01b0381166000908152600260205260409020546103075760405162461bcd60e51b815260206004820152601960248201527f507269636566656564206e6f7420696e20636f6e7472616374000000000000006044820152606401610184565b6001600160a01b03811660009081526002602052604081205461032c906001906106a4565b6001600160a01b03831660009081526002602052604081205560018054919250906103589082906106a4565b81548110610368576103686106bb565b600091825260209091200154600180546001600160a01b039092169183908110610394576103946106bb565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806103d3576103d36106d1565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b60008080805b6001548210156104c6576000905060018281548110610420576104206106bb565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610706565b5093506104b29250839150859050610756565b9250816104be8161076e565b9250506103ff565b6001546104d3818561079f565b6104dd9085610756565b6104e791906107b3565b935050505090565b6000546001600160a01b031633146105195760405162461bcd60e51b815260040161018490610659565b61052360006105c0565b565b6000546001600160a01b0316331461054f5760405162461bcd60e51b815260040161018490610659565b6001600160a01b0381166105b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610184565b6105bd816105c0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561062257600080fd5b81356001600160a01b038116811461063957600080fd5b9392505050565b60006020828403121561065257600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156106b6576106b661068e565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b805169ffffffffffffffffffff8116811461070157600080fd5b919050565b600080600080600060a0868803121561071e57600080fd5b610727866106e7565b945060208601519350604086015192506060860151915061074a608087016106e7565b90509295509295909350565b600082198211156107695761076961068e565b500190565b60006000198214156107825761078261068e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826107ae576107ae610789565b500690565b6000826107c2576107c2610789565b50049056fea2646970667358221220a4860566f032c4ff7f7e21844375d580ddc4b60964c526f1ab1271071775452664736f6c634300080c0033",
  "bytecodeSha1": "984761e5ab1aade2c756c25c45cc9f7000f63a44",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "TimeOracle",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "21": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "TimeOracle.addPriceFeed": {
          "20": [
            593,
            627,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "18": [
            2378,
            2395
          ],
          "19": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "15": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "16": [
            1998,
            2071
          ],
          "17": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "2": {},
      "3": {
        "TimeOracle.addPriceFeed": {
          "3": [
            585,
            661
          ],
          "4": [
            770,
            792
          ],
          "5": [
            802,
            849
          ]
        },
        "TimeOracle.deletePriceFeed": {
          "6": [
            936,
            1013
          ],
          "7": [
            1087,
            1125
          ],
          "8": [
            1135,
            1180
          ],
          "9": [
            1190,
            1204
          ]
        },
        "TimeOracle.getLatestTime": {
          "10": [
            1397,
            1410
          ],
          "11": [
            1424,
            1475
          ],
          "12": [
            1489,
            1524
          ],
          "13": [
            1379,
            1382
          ],
          "14": [
            1544,
            1612
          ]
        },
        "TimeOracle.getLength": {
          "1": [
            1682,
            1704
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.4.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101065780638da5cb5b1461010e57806395a9abab1461011f578063be1c766b1461013f578063f2fde38b1461014757600080fd5b80630bb6842d1461009857806318a57f99146100ad578063564a2b3c146100dd5780635ee1e512146100f0575b600080fd5b6100ab6100a6366004610610565b61015a565b005b6100c06100bb366004610640565b61024e565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100eb366004610610565b610278565b6100f86103f9565b6040519081526020016100d4565b6100ab6104ef565b6000546001600160a01b03166100c0565b6100f861012d366004610610565b60026020526000908152604090205481565b6001546100f8565b6100ab610155366004610610565b610525565b6000546001600160a01b0316331461018d5760405162461bcd60e51b815260040161018490610659565b60405180910390fd5b6001600160a01b038116600090815260026020526040902054156101f35760405162461bcd60e51b815260206004820152601d60248201527f50726963656665656420616c726561647920696e20636f6e74726163740000006044820152606401610184565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039093166001600160a01b0319909316831790555460009182526002602052604090912055565b6001818154811061025e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102a25760405162461bcd60e51b815260040161018490610659565b6001600160a01b0381166000908152600260205260409020546103075760405162461bcd60e51b815260206004820152601960248201527f507269636566656564206e6f7420696e20636f6e7472616374000000000000006044820152606401610184565b6001600160a01b03811660009081526002602052604081205461032c906001906106a4565b6001600160a01b03831660009081526002602052604081205560018054919250906103589082906106a4565b81548110610368576103686106bb565b600091825260209091200154600180546001600160a01b039092169183908110610394576103946106bb565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806103d3576103d36106d1565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b60008080805b6001548210156104c6576000905060018281548110610420576104206106bb565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610706565b5093506104b29250839150859050610756565b9250816104be8161076e565b9250506103ff565b6001546104d3818561079f565b6104dd9085610756565b6104e791906107b3565b935050505090565b6000546001600160a01b031633146105195760405162461bcd60e51b815260040161018490610659565b61052360006105c0565b565b6000546001600160a01b0316331461054f5760405162461bcd60e51b815260040161018490610659565b6001600160a01b0381166105b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610184565b6105bd816105c0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561062257600080fd5b81356001600160a01b038116811461063957600080fd5b9392505050565b60006020828403121561065257600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156106b6576106b661068e565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b805169ffffffffffffffffffff8116811461070157600080fd5b919050565b600080600080600060a0868803121561071e57600080fd5b610727866106e7565b945060208601519350604086015192506060860151915061074a608087016106e7565b90509295509295909350565b600082198211156107695761076961068e565b500190565b60006000198214156107825761078261068e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826107ae576107ae610789565b500690565b6000826107c2576107c2610789565b50049056fea2646970667358221220a4860566f032c4ff7f7e21844375d580ddc4b60964c526f1ab1271071775452664736f6c634300080c0033",
  "deployedSourceMap": "188:1526:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:337;;;;;;:::i;:::-;;:::i;:::-;;226:39;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;683:32:4;;;665:51;;653:2;638:18;226:39:3;;;;;;;;862:349;;;;;;:::i;:::-;;:::i;1217:402::-;;;:::i;:::-;;;873:25:4;;;861:2;846:18;1217:402:3;727:177:4;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;271:54:3;;;;;;:::i;:::-;;;;;;;;;;;;;;1625:87;1689:8;:15;1625:87;;1918:198:0;;;;;;:::i;:::-;;:::i;519:337:3:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;593:29:3;::::1;;::::0;;;:19:::1;:29;::::0;;;;;:34;585:76:::1;;;::::0;-1:-1:-1;;;585:76:3;;1680:2:4;585:76:3::1;::::0;::::1;1662:21:4::0;1719:2;1699:18;;;1692:30;1758:31;1738:18;;;1731:59;1807:18;;585:76:3::1;1478:353:4::0;585:76:3::1;770:8;:22:::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;770:22:3;;::::1;-1:-1:-1::0;;;;;;770:22:3;;::::1;::::0;::::1;::::0;;834:15;697:29:::1;802::::0;;;:19:::1;770:22;802:29:::0;;;;;:47;519:337::o;226:39::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;226:39:3;;-1:-1:-1;226:39:3;:::o;862:349::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;944:34:3;::::1;;::::0;;;:19:::1;:34;::::0;;;;;936:77:::1;;;::::0;-1:-1:-1;;;936:77:3;;2038:2:4;936:77:3::1;::::0;::::1;2020:21:4::0;2077:2;2057:18;;;2050:30;2116:27;2096:18;;;2089:55;2161:18;;936:77:3::1;1836:349:4::0;936:77:3::1;-1:-1:-1::0;;;;;1039:34:3;::::1;1023:13;1039:34:::0;;;:19:::1;:34;::::0;;;;;:38:::1;::::0;1076:1:::1;::::0;1039:38:::1;:::i;:::-;-1:-1:-1::0;;;;;1087:34:3;::::1;1124:1;1087:34:::0;;;:19:::1;:34;::::0;;;;:38;1153:8:::1;1162:15:::0;;1023:54;;-1:-1:-1;1153:8:3;1162:17:::1;::::0;1153:8;;1162:17:::1;:::i;:::-;1153:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;1135:15;;-1:-1:-1;;;;;1153:27:3;;::::1;::::0;1144:5;;1135:15;::::1;;;;;:::i;:::-;;;;;;;;;:45;;;;;-1:-1:-1::0;;;;;1135:45:3::1;;;;;-1:-1:-1::0;;;;;1135:45:3::1;;;;;;1190:8;:14;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1190:14:3;;;;;-1:-1:-1;;;;;;1190:14:3::1;::::0;;;;;-1:-1:-1;;862:349:3:o;1217:402::-;1263:4;;;;1347:188;1362:8;:15;1358:19;;1347:188;;;1409:1;1397:13;;1446:8;1455:1;1446:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1446:11:3;-1:-1:-1;;;;;1446:27:3;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1424:51:3;-1:-1:-1;1502:22:3;;-1:-1:-1;1424:51:3;;-1:-1:-1;1502:10:3;;-1:-1:-1;1502:22:3;:::i;:::-;1489:35;-1:-1:-1;1379:3:3;;;;:::i;:::-;;;;1347:188;;;1597:8;:15;1566:28;1597:15;1566:10;:28;:::i;:::-;1552:43;;:10;:43;:::i;:::-;1551:61;;;;:::i;:::-;1544:68;;;;;1217:402;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4227:2:4;1998:73:0::1;::::0;::::1;4209:21:4::0;4266:2;4246:18;;;4239:30;4305:34;4285:18;;;4278:62;-1:-1:-1;;;4356:18:4;;;4349:36;4402:19;;1998:73:0::1;4025:402:4::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:4;;305:180;-1:-1:-1;305:180:4:o;1117:356::-;1319:2;1301:21;;;1338:18;;;1331:30;1397:34;1392:2;1377:18;;1370:62;1464:2;1449:18;;1117:356::o;2190:127::-;2251:10;2246:3;2242:20;2239:1;2232:31;2282:4;2279:1;2272:15;2306:4;2303:1;2296:15;2322:125;2362:4;2390:1;2387;2384:8;2381:34;;;2395:18;;:::i;:::-;-1:-1:-1;2432:9:4;;2322:125::o;2452:127::-;2513:10;2508:3;2504:20;2501:1;2494:31;2544:4;2541:1;2534:15;2568:4;2565:1;2558:15;2584:127;2645:10;2640:3;2636:20;2633:1;2626:31;2676:4;2673:1;2666:15;2700:4;2697:1;2690:15;2716:179;2794:13;;2847:22;2836:34;;2826:45;;2816:73;;2885:1;2882;2875:12;2816:73;2716:179;;;:::o;2900:473::-;3003:6;3011;3019;3027;3035;3088:3;3076:9;3067:7;3063:23;3059:33;3056:53;;;3105:1;3102;3095:12;3056:53;3128:39;3157:9;3128:39;:::i;:::-;3118:49;;3207:2;3196:9;3192:18;3186:25;3176:35;;3251:2;3240:9;3236:18;3230:25;3220:35;;3295:2;3284:9;3280:18;3274:25;3264:35;;3318:49;3362:3;3351:9;3347:19;3318:49;:::i;:::-;3308:59;;2900:473;;;;;;;;:::o;3378:128::-;3418:3;3449:1;3445:6;3442:1;3439:13;3436:39;;;3455:18;;:::i;:::-;-1:-1:-1;3491:9:4;;3378:128::o;3511:135::-;3550:3;-1:-1:-1;;3571:17:4;;3568:43;;;3591:18;;:::i;:::-;-1:-1:-1;3638:1:4;3627:13;;3511:135::o;3651:127::-;3712:10;3707:3;3703:20;3700:1;3693:31;3743:4;3740:1;3733:15;3767:4;3764:1;3757:15;3783:112;3815:1;3841;3831:35;;3846:18;;:::i;:::-;-1:-1:-1;3880:9:4;;3783:112::o;3900:120::-;3940:1;3966;3956:35;;3971:18;;:::i;:::-;-1:-1:-1;4005:9:4;;3900:120::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    188,
    1714
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95A9ABAB EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xBE1C766B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBB6842D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18A57F99 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x564A2B3C EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x5EE1E512 EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726963656665656420616C726561647920696E20636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x184 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR SWAP1 SSTORE SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269636566656564206E6F7420696E20636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x184 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x32C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x358 SWAP1 DUP3 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x368 JUMPI PUSH2 0x368 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x394 JUMPI PUSH2 0x394 PUSH2 0x6BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x3D3 JUMPI PUSH2 0x3D3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 SWAP1 POP PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x420 JUMPI PUSH2 0x420 PUSH2 0x6BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST POP SWAP4 POP PUSH2 0x4B2 SWAP3 POP DUP4 SWAP2 POP DUP6 SWAP1 POP PUSH2 0x756 JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0x4BE DUP2 PUSH2 0x76E JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x4D3 DUP2 DUP6 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x4DD SWAP1 DUP6 PUSH2 0x756 JUMP JUMPDEST PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x7B3 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH2 0x523 PUSH1 0x0 PUSH2 0x5C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x5C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6B6 JUMPI PUSH2 0x6B6 PUSH2 0x68E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP7 PUSH2 0x6E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x74A PUSH1 0x80 DUP8 ADD PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x769 JUMPI PUSH2 0x769 PUSH2 0x68E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7AE JUMPI PUSH2 0x7AE PUSH2 0x789 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7C2 JUMPI PUSH2 0x7C2 PUSH2 0x789 JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 DUP7 SDIV PUSH7 0xF032C4FF7F7E21 DUP5 NUMBER PUSH22 0xD580DDC4B60964C526F1AB1271071775452664736F6C PUSH4 0x4300080C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x106"
    },
    "53": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10E"
    },
    "64": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95A9ABAB"
    },
    "71": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "75": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBE1C766B"
    },
    "82": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F"
    },
    "86": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x147"
    },
    "97": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBB6842D"
    },
    "109": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18A57F99"
    },
    "120": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "124": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x564A2B3C"
    },
    "131": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD"
    },
    "135": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5EE1E512"
    },
    "142": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF0"
    },
    "146": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        188,
        1714
      ],
      "op": "REVERT",
      "path": "3"
    },
    "152": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "156": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6"
    },
    "159": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "160": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "162": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "165": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "i",
      "offset": [
        519,
        856
      ],
      "op": "JUMP",
      "path": "3"
    },
    "166": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "167": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A"
    },
    "170": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "i",
      "offset": [
        519,
        856
      ],
      "op": "JUMP",
      "path": "3"
    },
    "171": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "STOP",
      "path": "3"
    },
    "173": {
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0"
    },
    "177": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB"
    },
    "180": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "181": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "183": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x640"
    },
    "186": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "i",
      "offset": [
        226,
        265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "187": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "188": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "191": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "i",
      "offset": [
        226,
        265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "192": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "193": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "195": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "op": "SWAP1"
    },
    "205": {
      "op": "SWAP2"
    },
    "206": {
      "op": "AND"
    },
    "207": {
      "op": "DUP2"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "op": "ADD"
    },
    "212": {
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "215": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "216": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP1",
      "path": "3"
    },
    "217": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "218": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SUB",
      "path": "3"
    },
    "219": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "220": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "RETURN",
      "path": "3"
    },
    "221": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "222": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "225": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEB"
    },
    "228": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "229": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "231": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "234": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        862,
        1211
      ],
      "op": "JUMP",
      "path": "3"
    },
    "235": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "236": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x278"
    },
    "239": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        862,
        1211
      ],
      "op": "JUMP",
      "path": "3"
    },
    "240": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "241": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "244": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F9"
    },
    "247": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1217,
        1619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "248": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "251": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "252": {
      "op": "SWAP1"
    },
    "253": {
      "op": "DUP2"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "257": {
      "op": "ADD"
    },
    "258": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "261": {
      "op": "JUMP"
    },
    "262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "270": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "280": {
      "op": "SHL"
    },
    "281": {
      "op": "SUB"
    },
    "282": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "283": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "286": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "offset": [
        271,
        325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "291": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12D"
    },
    "294": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "295": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "297": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "300": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        271,
        325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "301": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "302": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "304": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "306": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "307": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "310": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "311": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "316": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "317": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "318": {
      "fn": "Ownable.owner",
      "offset": [
        271,
        325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "319": {
      "fn": "TimeOracle.getLength",
      "offset": [
        1625,
        1712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "320": {
      "fn": "TimeOracle.getLength",
      "offset": [
        1689,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "322": {
      "fn": "TimeOracle.getLength",
      "offset": [
        1689,
        1704
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "323": {
      "fn": "TimeOracle.getLength",
      "offset": [
        1625,
        1712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "326": {
      "fn": "TimeOracle.getLength",
      "offset": [
        1625,
        1712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x610"
    },
    "340": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x525"
    },
    "345": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        519,
        856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "356": {
      "op": "SHL"
    },
    "357": {
      "op": "SUB"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "360": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "361": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "364": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "374": {
      "op": "SHL"
    },
    "375": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "387": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "392": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "393": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "397": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "404": {
      "op": "SHL"
    },
    "405": {
      "op": "SUB"
    },
    "406": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 3
    },
    "407": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "AND",
      "path": "3"
    },
    "408": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "410": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "411": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "DUP2",
      "path": "3"
    },
    "412": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "413": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "415": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "417": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "418": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "420": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "421": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "422": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        622
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "423": {
      "branch": 20,
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        593,
        627
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "424": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F3"
    },
    "427": {
      "branch": 20,
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "428": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "430": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "DUP2",
      "path": "3"
    },
    "439": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "444": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "DUP3",
      "path": "3"
    },
    "445": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "ADD",
      "path": "3"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "451": {
      "op": "DUP3"
    },
    "452": {
      "op": "ADD"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "PUSH32",
      "value": "0x50726963656665656420616C726561647920696E20636F6E7472616374000000"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "489": {
      "op": "DUP3"
    },
    "490": {
      "op": "ADD"
    },
    "491": {
      "op": "MSTORE"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "494": {
      "op": "ADD"
    },
    "495": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184"
    },
    "498": {
      "op": "JUMP"
    },
    "499": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        585,
        661
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "500": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        778
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x1"
    },
    "502": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "503": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "504": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "505": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP3",
      "path": "3"
    },
    "506": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "ADD",
      "path": "3"
    },
    "507": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP3",
      "path": "3"
    },
    "508": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "509": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "542": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "ADD",
      "path": "3"
    },
    "543": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "544": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "SUB"
    },
    "553": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "554": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "555": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "AND",
      "path": "3"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "op": "SUB"
    },
    "564": {
      "op": "NOT"
    },
    "565": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "566": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "567": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "AND",
      "path": "3"
    },
    "568": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "DUP4",
      "path": "3"
    },
    "569": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "OR",
      "path": "3"
    },
    "570": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "571": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "572": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        834,
        849
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 5
    },
    "573": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        697,
        726
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "575": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "576": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "577": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "578": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "580": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        770,
        792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "582": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "583": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "585": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "586": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "587": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        831
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "588": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        802,
        849
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "589": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "o",
      "offset": [
        519,
        856
      ],
      "op": "JUMP",
      "path": "3"
    },
    "590": {
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "591": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "593": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "594": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "595": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "596": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "597": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "LT",
      "path": "3"
    },
    "598": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25E"
    },
    "601": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "602": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "604": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP1",
      "path": "3"
    },
    "605": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "REVERT",
      "path": "3"
    },
    "606": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "607": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "609": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "610": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "DUP3",
      "path": "3"
    },
    "611": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "612": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "614": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "615": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "616": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "617": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "ADD",
      "path": "3"
    },
    "618": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "offset": [
        226,
        265
      ],
      "op": "AND",
      "path": "3"
    },
    "628": {
      "fn": "TimeOracle.addPriceFeed",
      "offset": [
        226,
        265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "offset": [
        226,
        265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "631": {
      "fn": "TimeOracle.addPriceFeed",
      "jump": "o",
      "offset": [
        226,
        265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "632": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        862,
        1211
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "633": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "645": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "646": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "647": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "650": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "665": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "669": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "673": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "674": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "684": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "AND",
      "path": "3"
    },
    "685": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "687": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "688": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "689": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "690": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        963
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "692": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "694": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "695": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "697": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "698": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "699": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        944,
        978
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "700": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "703": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "704": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "706": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "DUP2",
      "path": "3"
    },
    "715": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "718": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "720": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "DUP3",
      "path": "3"
    },
    "721": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "ADD",
      "path": "3"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "727": {
      "op": "DUP3"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "op": "MSTORE"
    },
    "730": {
      "op": "PUSH32",
      "value": "0x507269636566656564206E6F7420696E20636F6E747261637400000000000000"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "765": {
      "op": "DUP3"
    },
    "766": {
      "op": "ADD"
    },
    "767": {
      "op": "MSTORE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184"
    },
    "774": {
      "op": "JUMP"
    },
    "775": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        936,
        1013
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "op": "SUB"
    },
    "784": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "785": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "AND",
      "path": "3"
    },
    "786": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1023,
        1036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "788": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "789": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "790": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "791": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "793": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "795": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "796": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "798": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "DUP2",
      "path": "3"
    },
    "799": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "800": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1073
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "801": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32C"
    },
    "804": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "805": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1076,
        1077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "807": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1076,
        1077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "808": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A4"
    },
    "811": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        1039,
        1077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "812": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1039,
        1077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 7
    },
    "822": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "AND",
      "path": "3"
    },
    "823": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1124,
        1125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "825": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "826": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "DUP2",
      "path": "3"
    },
    "827": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "828": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "830": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "832": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "833": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "835": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "DUP2",
      "path": "3"
    },
    "836": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1121
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "837": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1087,
        1125
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "838": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1161
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "840": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "841": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1177
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "842": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1023,
        1077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "843": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1023,
        1077
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1161
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "846": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x358"
    },
    "849": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1179
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "850": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1161
      ],
      "op": "DUP3",
      "path": "3"
    },
    "851": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1161
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "852": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A4"
    },
    "855": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        1162,
        1179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "856": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1162,
        1179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "857": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "858": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "859": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "860": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "LT",
      "path": "3"
    },
    "861": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x368"
    },
    "864": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "865": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x368"
    },
    "868": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BB"
    },
    "871": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        1153,
        1180
      ],
      "op": "JUMP",
      "path": "3"
    },
    "872": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "873": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "875": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "876": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "DUP3",
      "path": "3"
    },
    "877": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "878": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "880": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "881": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "882": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "883": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "ADD",
      "path": "3"
    },
    "884": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "885": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "887": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "DUP1",
      "path": "3"
    },
    "888": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "898": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "899": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "AND",
      "path": "3"
    },
    "900": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1153,
        1180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "901": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1144,
        1149
      ],
      "op": "DUP4",
      "path": "3"
    },
    "902": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1144,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "903": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "DUP2",
      "path": "3"
    },
    "904": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "LT",
      "path": "3"
    },
    "905": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x394"
    },
    "908": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "909": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x394"
    },
    "912": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BB"
    },
    "915": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        1135,
        1150
      ],
      "op": "JUMP",
      "path": "3"
    },
    "916": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "917": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "918": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "920": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "921": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "923": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "925": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "926": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "ADD",
      "path": "3"
    },
    "927": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "929": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "932": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "EXP",
      "path": "3"
    },
    "933": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "934": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "935": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "op": "SUB"
    },
    "944": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "MUL",
      "path": "3"
    },
    "945": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "NOT",
      "path": "3"
    },
    "946": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "AND",
      "path": "3"
    },
    "947": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "948": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "DUP4",
      "path": "3"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "AND",
      "path": "3"
    },
    "958": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "MUL",
      "path": "3"
    },
    "959": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "OR",
      "path": "3"
    },
    "960": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "961": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "962": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1135,
        1180
      ],
      "op": "POP",
      "path": "3"
    },
    "963": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1198
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1"
    },
    "965": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP1",
      "path": "3"
    },
    "966": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "967": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP1",
      "path": "3"
    },
    "968": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D3"
    },
    "971": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "972": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D3"
    },
    "975": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D1"
    },
    "978": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "i",
      "offset": [
        1190,
        1204
      ],
      "op": "JUMP",
      "path": "3"
    },
    "979": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "980": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "982": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP3",
      "path": "3"
    },
    "983": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP2",
      "path": "3"
    },
    "984": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "985": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "987": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "988": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "989": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP2",
      "path": "3"
    },
    "990": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "ADD",
      "path": "3"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "993": {
      "op": "NOT"
    },
    "994": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "995": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP2",
      "path": "3"
    },
    "996": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "ADD",
      "path": "3"
    },
    "997": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "DUP1",
      "path": "3"
    },
    "998": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "op": "NOT"
    },
    "1008": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "AND",
      "path": "3"
    },
    "1009": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1010": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1011": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "ADD",
      "path": "3"
    },
    "1012": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1013": {
      "fn": "TimeOracle.deletePriceFeed",
      "offset": [
        1190,
        1204
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "TimeOracle.deletePriceFeed",
      "jump": "o",
      "offset": [
        862,
        1211
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1017": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1018": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1263,
        1267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1020": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1263,
        1267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1021": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1263,
        1267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1022": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1263,
        1267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1023": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1024": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1362,
        1370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1026": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1362,
        1377
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1027": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1358,
        1377
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1028": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1358,
        1377
      ],
      "op": "LT",
      "path": "3"
    },
    "1029": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1030": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C6"
    },
    "1033": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1034": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1409,
        1410
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x0"
    },
    "1036": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1397,
        1410
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1037": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1397,
        1410
      ],
      "op": "POP",
      "path": "3"
    },
    "1038": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1454
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x1"
    },
    "1040": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1455,
        1456
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1041": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1042": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1043": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1044": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "LT",
      "path": "3"
    },
    "1045": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "1048": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1049": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "1052": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BB"
    },
    "1055": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1446,
        1457
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1056": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1057": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1058": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1060": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1061": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1063": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1065": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1066": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "ADD",
      "path": "3"
    },
    "1067": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1069": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1070": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1071": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1072": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1075": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "EXP",
      "path": "3"
    },
    "1076": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1077": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "DIV",
      "path": "3"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "SUB"
    },
    "1086": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1457
      ],
      "op": "AND",
      "path": "3"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "SUB"
    },
    "1095": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1473
      ],
      "op": "AND",
      "path": "3"
    },
    "1096": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1473
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEAF968C"
    },
    "1101": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1103": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1104": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1105": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1110": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "AND",
      "path": "3"
    },
    "1111": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "1113": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "SHL",
      "path": "3"
    },
    "1114": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1115": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1116": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1118": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1119": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "1121": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1123": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1124": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1125": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1126": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "SUB",
      "path": "3"
    },
    "1127": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1128": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1129": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "GAS",
      "path": "3"
    },
    "1130": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1131": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1132": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1133": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1134": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "1137": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1138": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1139": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1141": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1142": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1143": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1144": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1146": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1147": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1148": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "POP",
      "path": "3"
    },
    "1149": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "POP",
      "path": "3"
    },
    "1150": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "POP",
      "path": "3"
    },
    "1151": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "POP",
      "path": "3"
    },
    "1152": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1154": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1155": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1156": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1158": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "NOT",
      "path": "3"
    },
    "1159": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1161": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1162": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1163": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "AND",
      "path": "3"
    },
    "1164": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1165": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1166": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1167": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1169": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1170": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "POP",
      "path": "3"
    },
    "1171": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1172": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "ADD",
      "path": "3"
    },
    "1173": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49F"
    },
    "1177": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1178": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1179": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x706"
    },
    "1182": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1446,
        1475
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1183": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1446,
        1475
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1424,
        1475
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1524
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x4B2"
    },
    "1190": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1524
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1424,
        1475
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1193": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1424,
        1475
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1512
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1196": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1524
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x756"
    },
    "1201": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1502,
        1524
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1202": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1502,
        1524
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1203": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1489,
        1524
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 13
    },
    "1206": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BE"
    },
    "1209": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1210": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76E"
    },
    "1213": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1379,
        1382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1214": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1215": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1216": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "POP",
      "path": "3"
    },
    "1217": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1379,
        1382
      ],
      "op": "POP",
      "path": "3"
    },
    "1218": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FF"
    },
    "1221": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1222": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1347,
        1535
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1223": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1597,
        1605
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x1"
    },
    "1225": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1597,
        1612
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1226": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1566,
        1594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D3"
    },
    "1229": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1597,
        1612
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1230": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1566,
        1576
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1231": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1566,
        1594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79F"
    },
    "1234": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1566,
        1594
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1235": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1566,
        1594
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1236": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1552,
        1595
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DD"
    },
    "1239": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1552,
        1595
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1240": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1552,
        1562
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1241": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1552,
        1595
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x756"
    },
    "1244": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1552,
        1595
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1245": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1552,
        1595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1246": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1551,
        1612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E7"
    },
    "1249": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1551,
        1612
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1250": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1551,
        1612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1251": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1551,
        1612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B3"
    },
    "1254": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "i",
      "offset": [
        1551,
        1612
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1255": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1551,
        1612
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1256": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1544,
        1612
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1257": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1544,
        1612
      ],
      "op": "POP",
      "path": "3"
    },
    "1258": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1544,
        1612
      ],
      "op": "POP",
      "path": "3"
    },
    "1259": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1544,
        1612
      ],
      "op": "POP",
      "path": "3"
    },
    "1260": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1544,
        1612
      ],
      "op": "POP",
      "path": "3"
    },
    "1261": {
      "fn": "TimeOracle.getLatestTime",
      "offset": [
        1217,
        1619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1262": {
      "fn": "TimeOracle.getLatestTime",
      "jump": "o",
      "offset": [
        1217,
        1619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1266": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1277": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1278": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "1281": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1282": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1285": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1291": {
      "op": "SHL"
    },
    "1292": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "1300": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "1304": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x523"
    },
    "1309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "1314": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1316": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1318": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1320": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1330": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1331": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1332": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54F"
    },
    "1335": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1336": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1338": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1347": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1350": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1351": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "1354": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1355": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "1358": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1359": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1369": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1370": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B4"
    },
    "1373": {
      "branch": 21,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "MSTORE"
    },
    "1438": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1450": {
      "op": "DUP3"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "1459": {
      "op": "JUMP"
    },
    "1460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5BD"
    },
    "1464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "1468": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1471": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 18
    },
    "1486": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "op": "SUB"
    },
    "1496": {
      "op": "NOT"
    },
    "1497": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1498": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1499": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1500": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1501": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1503": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "1505": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1507": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1508": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1509": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1546": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1547": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1551": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1552": {
      "op": "JUMPDEST"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1557": {
      "op": "DUP3"
    },
    "1558": {
      "op": "DUP5"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "op": "SLT"
    },
    "1561": {
      "op": "ISZERO"
    },
    "1562": {
      "op": "PUSH2",
      "value": "0x622"
    },
    "1565": {
      "op": "JUMPI"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1568": {
      "op": "DUP1"
    },
    "1569": {
      "op": "REVERT"
    },
    "1570": {
      "op": "JUMPDEST"
    },
    "1571": {
      "op": "DUP2"
    },
    "1572": {
      "op": "CALLDATALOAD"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "op": "DUP2"
    },
    "1582": {
      "op": "AND"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "EQ"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x639"
    },
    "1588": {
      "op": "JUMPI"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1591": {
      "op": "DUP1"
    },
    "1592": {
      "op": "REVERT"
    },
    "1593": {
      "op": "JUMPDEST"
    },
    "1594": {
      "op": "SWAP4"
    },
    "1595": {
      "op": "SWAP3"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "jump": "o",
      "op": "JUMP"
    },
    "1600": {
      "op": "JUMPDEST"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "DUP5"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "op": "SLT"
    },
    "1609": {
      "op": "ISZERO"
    },
    "1610": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1613": {
      "op": "JUMPI"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1616": {
      "op": "DUP1"
    },
    "1617": {
      "op": "REVERT"
    },
    "1618": {
      "op": "JUMPDEST"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "CALLDATALOAD"
    },
    "1621": {
      "op": "SWAP2"
    },
    "1622": {
      "op": "SWAP1"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "jump": "o",
      "op": "JUMP"
    },
    "1625": {
      "op": "JUMPDEST"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "op": "DUP1"
    },
    "1629": {
      "op": "DUP3"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "DUP2"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "op": "MSTORE"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "SWAP1"
    },
    "1677": {
      "jump": "o",
      "op": "JUMP"
    },
    "1678": {
      "op": "JUMPDEST"
    },
    "1679": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1699": {
      "op": "REVERT"
    },
    "1700": {
      "op": "JUMPDEST"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "DUP3"
    },
    "1705": {
      "op": "LT"
    },
    "1706": {
      "op": "ISZERO"
    },
    "1707": {
      "op": "PUSH2",
      "value": "0x6B6"
    },
    "1710": {
      "op": "JUMPI"
    },
    "1711": {
      "op": "PUSH2",
      "value": "0x6B6"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1717": {
      "jump": "i",
      "op": "JUMP"
    },
    "1718": {
      "op": "JUMPDEST"
    },
    "1719": {
      "op": "POP"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "op": "SWAP1"
    },
    "1722": {
      "jump": "o",
      "op": "JUMP"
    },
    "1723": {
      "op": "JUMPDEST"
    },
    "1724": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1731": {
      "op": "SHL"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1744": {
      "op": "REVERT"
    },
    "1745": {
      "op": "JUMPDEST"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1766": {
      "op": "REVERT"
    },
    "1767": {
      "op": "JUMPDEST"
    },
    "1768": {
      "op": "DUP1"
    },
    "1769": {
      "op": "MLOAD"
    },
    "1770": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "1781": {
      "op": "DUP2"
    },
    "1782": {
      "op": "AND"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "EQ"
    },
    "1785": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1788": {
      "op": "JUMPI"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1791": {
      "op": "DUP1"
    },
    "1792": {
      "op": "REVERT"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "SWAP2"
    },
    "1795": {
      "op": "SWAP1"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "jump": "o",
      "op": "JUMP"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1801": {
      "op": "DUP1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1804": {
      "op": "DUP1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "DUP7"
    },
    "1810": {
      "op": "DUP9"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "op": "SLT"
    },
    "1813": {
      "op": "ISZERO"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1817": {
      "op": "JUMPI"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "DUP1"
    },
    "1821": {
      "op": "REVERT"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1826": {
      "op": "DUP7"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x6E7"
    },
    "1830": {
      "jump": "i",
      "op": "JUMP"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "SWAP5"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1836": {
      "op": "DUP7"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "MLOAD"
    },
    "1839": {
      "op": "SWAP4"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1843": {
      "op": "DUP7"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "MLOAD"
    },
    "1846": {
      "op": "SWAP3"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1850": {
      "op": "DUP7"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "MLOAD"
    },
    "1853": {
      "op": "SWAP2"
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1860": {
      "op": "DUP8"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "PUSH2",
      "value": "0x6E7"
    },
    "1865": {
      "jump": "i",
      "op": "JUMP"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "SWAP1"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "op": "SWAP3"
    },
    "1870": {
      "op": "SWAP6"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "op": "SWAP3"
    },
    "1873": {
      "op": "SWAP6"
    },
    "1874": {
      "op": "SWAP1"
    },
    "1875": {
      "op": "SWAP4"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "jump": "o",
      "op": "JUMP"
    },
    "1878": {
      "op": "JUMPDEST"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "NOT"
    },
    "1883": {
      "op": "DUP3"
    },
    "1884": {
      "op": "GT"
    },
    "1885": {
      "op": "ISZERO"
    },
    "1886": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1889": {
      "op": "JUMPI"
    },
    "1890": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1893": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1896": {
      "jump": "i",
      "op": "JUMP"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "SWAP1"
    },
    "1901": {
      "jump": "o",
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1907": {
      "op": "NOT"
    },
    "1908": {
      "op": "DUP3"
    },
    "1909": {
      "op": "EQ"
    },
    "1910": {
      "op": "ISZERO"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x782"
    },
    "1914": {
      "op": "JUMPI"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x782"
    },
    "1918": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1921": {
      "jump": "i",
      "op": "JUMP"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "SWAP1"
    },
    "1928": {
      "jump": "o",
      "op": "JUMP"
    },
    "1929": {
      "op": "JUMPDEST"
    },
    "1930": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1945": {
      "op": "MSTORE"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "REVERT"
    },
    "1951": {
      "op": "JUMPDEST"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "DUP3"
    },
    "1955": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1958": {
      "op": "JUMPI"
    },
    "1959": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1962": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1965": {
      "jump": "i",
      "op": "JUMP"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "op": "MOD"
    },
    "1969": {
      "op": "SWAP1"
    },
    "1970": {
      "jump": "o",
      "op": "JUMP"
    },
    "1971": {
      "op": "JUMPDEST"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1974": {
      "op": "DUP3"
    },
    "1975": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1978": {
      "op": "JUMPI"
    },
    "1979": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1985": {
      "jump": "i",
      "op": "JUMP"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "DIV"
    },
    "1989": {
      "op": "SWAP1"
    },
    "1990": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b905846eec39658ffa102597a0f843f6c906f06d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TimeOracle is Ownable {\n\n    AggregatorV3Interface[] public timeFeed;\n    mapping(address => uint256) public feedToArrayLocation;\n\n    constructor() {\n        //timeFeed.push(AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e));\n    }\n\n    // We suppose the address is a pricefeed, if not tx will revert\n    function addPriceFeed(address _newFeed) public onlyOwner{\n        require(feedToArrayLocation[_newFeed] == 0, 'Pricefeed already in contract');\n        //Agrega al final\n        AggregatorV3Interface newFeed = AggregatorV3Interface(_newFeed);\n        timeFeed.push(newFeed);\n        feedToArrayLocation[_newFeed] = timeFeed.length;\n    }\n\n    function deletePriceFeed(address _feedToDelete) public onlyOwner{\n        require(feedToArrayLocation[_feedToDelete] != 0, 'Pricefeed not in contract');\n        uint256 index = feedToArrayLocation[_feedToDelete] - 1;\n        feedToArrayLocation[_feedToDelete] = 0;\n        timeFeed[index] = timeFeed[timeFeed.length-1];\n        timeFeed.pop();\n    }\n\n    function getLatestTime() public view returns (uint) {\n        uint sumOfTimes;\n        uint256 i;\n        uint timeStamp;\n        for(i = 0; i < timeFeed.length; i++){\n            timeStamp = 0;\n            ( , , , timeStamp,) = timeFeed[i].latestRoundData();\n            sumOfTimes = sumOfTimes + timeStamp;\n        }\n        return (sumOfTimes + (sumOfTimes % timeFeed.length))/timeFeed.length;\n    }\n\n    function getLength() public view returns (uint){\n        return timeFeed.length; \n    }\n}",
  "sourceMap": "188:1526:3:-:0;;;332:113;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;188:1526:3;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;188:1526:3:-;;;;;;;",
  "sourcePath": "contracts/TimeOracle.sol",
  "type": "contract"
}